@use "sass:math";

@mixin loading-background-image($color: #fff, $size: 64px, $important: null) {
  $svg: '<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="#{$size}"   height="#{$size}" viewBox="0 0 128 128" xml:space="preserve">  <g><path d="M78.75 16.18V1.56a64.1 64.1 0 0 1 47.7 47.7H111.8a49.98 49.98 0  0 0-33.07-33.08zM16.43 49.25H1.8a64.1 64.1 0 0 1 47.7-47.7V16.2a49.98 49.98  0 0 0-33.07 33.07zm33.07 62.32v14.62A64.1 64.1 0 0 1 1.8 78.5h14.63a49.98  49.98 0 0 0 33.07 33.07zm62.32-33.07h14.62a64.1 64.1 0 0 1-47.7  47.7v-14.63a49.98 49.98 0 0 0 33.08-33.07z" fill="#{$color}"/>  <animateTransform attributeName="transform" type="rotate" from="-90 64 64"  to="0 64 64" dur="400ms" repeatCount="indefinite"></animateTransform></g>  </svg>';
  @if $important {
    background-image: inline-svg($svg) !important;
  } @else {
    background-image: inline-svg($svg);
  }
}

@mixin loading-rotate-mixin($size, $color: #000) {
  content: "";
  display: block;
  width: $size;
  height: $size;
  position: absolute;
  right: calc(50% - #{math.div($size,2)});
  top: calc(50% - #{math.div($size,2)});
  z-index: 2;
  @include loading-background-image($color, $size);
  background-repeat: no-repeat;
  background-size: cover;
}

.loading {
  position: relative;
  min-height: rem(300px);
  padding-top: rem(10px);
  padding-bottom: rem(10px);
  &__wrapper {
    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    height: auto !important;
    //min-height: rem(100px);
  }
  &::before {
    content: "";
    display: block;
    position: absolute;
    width: calc(100% + #{rem(4px)});
    height: calc(100% + #{rem(4px)});
    z-index: 100;
    background-color: $color-white;
    border-radius: rem(15px);
    top: rem(-2px);
    left: rem(-2px)
  }
  &::after {
    @include loading-rotate-mixin(64px);
    z-index: 101;
  }
  &__content {
    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    &_loading {
      height: 67vh;
      overflow: hidden;
    }
  }
  &_items {
    min-height: 30vh;
  }
  & .loading {
    display: none;
  }
  // При добавлении модификаторов следует учитывать, что они могут удляться
  // в app.js при использовании с классом .loading_pre-init
  &_small {
    min-height: unset;
    &::after {
      @include loading-rotate-mixin(32px)
    }
  }
  &_smaller {
    min-height: unset;
    &::after {
      @include loading-rotate-mixin(24px)
    }
    z-index: 100 !important;
  }
  &_only-icon {
    &:before {
      background-color: $color-white;
    }
    &::after {
      @include loading-rotate-mixin(64px, $color-main);
      z-index: 101;
    }
  }
}